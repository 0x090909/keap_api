package item

import (
	"errors"
)

type WithCampaign_GetResponse_sequences_paths_items_type int

const (
	START_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE WithCampaign_GetResponse_sequences_paths_items_type = iota
	WAIT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	DELAYTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	CONTACTTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	DATETIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	APPOINTMENTTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	EMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	BARDEMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	UNLAYEREMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	EMAILCONFIRM_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	VOICE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	FAX_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	LETTER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	AUTOMATEDSMS_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	TAG_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	OPPORTUNITY_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	NOTE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	TASK_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	COMPLETETASKS_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	APPOINTMENT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	ASSIGNOWNER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	FIELDVALUE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	FULFILLMENT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	CREATEORDER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	DEAL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	ADDTOSEQUENCE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	CANCELSUBSCRIPTION_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	MOVEOPPORTUNITY_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	HTTP_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	CUSTOMERHUB_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	HTTPREQUEST_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	ACTIONSET_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
)

func (i WithCampaign_GetResponse_sequences_paths_items_type) String() string {
	return []string{"Start", "Wait", "DelayTimer", "ContactTimer", "DateTimer", "AppointmentTimer", "Email", "BardEmail", "UnlayerEmail", "EmailConfirm", "Voice", "Fax", "Letter", "AutomatedSms", "Tag", "Opportunity", "Note", "Task", "CompleteTasks", "Appointment", "AssignOwner", "FieldValue", "Fulfillment", "CreateOrder", "Deal", "AddToSequence", "CancelSubscription", "MoveOpportunity", "Http", "CustomerHub", "HttpRequest", "ActionSet"}[i]
}
func ParseWithCampaign_GetResponse_sequences_paths_items_type(v string) (any, error) {
	result := START_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	switch v {
	case "Start":
		result = START_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Wait":
		result = WAIT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "DelayTimer":
		result = DELAYTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "ContactTimer":
		result = CONTACTTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "DateTimer":
		result = DATETIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "AppointmentTimer":
		result = APPOINTMENTTIMER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Email":
		result = EMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "BardEmail":
		result = BARDEMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "UnlayerEmail":
		result = UNLAYEREMAIL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "EmailConfirm":
		result = EMAILCONFIRM_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Voice":
		result = VOICE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Fax":
		result = FAX_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Letter":
		result = LETTER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "AutomatedSms":
		result = AUTOMATEDSMS_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Tag":
		result = TAG_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Opportunity":
		result = OPPORTUNITY_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Note":
		result = NOTE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Task":
		result = TASK_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "CompleteTasks":
		result = COMPLETETASKS_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Appointment":
		result = APPOINTMENT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "AssignOwner":
		result = ASSIGNOWNER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "FieldValue":
		result = FIELDVALUE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Fulfillment":
		result = FULFILLMENT_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "CreateOrder":
		result = CREATEORDER_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Deal":
		result = DEAL_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "AddToSequence":
		result = ADDTOSEQUENCE_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "CancelSubscription":
		result = CANCELSUBSCRIPTION_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "MoveOpportunity":
		result = MOVEOPPORTUNITY_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "Http":
		result = HTTP_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "CustomerHub":
		result = CUSTOMERHUB_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "HttpRequest":
		result = HTTPREQUEST_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	case "ActionSet":
		result = ACTIONSET_WITHCAMPAIGN_GETRESPONSE_SEQUENCES_PATHS_ITEMS_TYPE
	default:
		return 0, errors.New("Unknown WithCampaign_GetResponse_sequences_paths_items_type value: " + v)
	}
	return &result, nil
}
func SerializeWithCampaign_GetResponse_sequences_paths_items_type(values []WithCampaign_GetResponse_sequences_paths_items_type) []string {
	result := make([]string, len(values))
	for i, v := range values {
		result[i] = v.String()
	}
	return result
}
func (i WithCampaign_GetResponse_sequences_paths_items_type) isMultiValue() bool {
	return false
}
